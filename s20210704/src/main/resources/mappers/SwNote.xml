<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.s20210704.dao.SwNoteServiceImpl">
	
	<select id ="receiveNoteCount2" parameterType="int" resultType="int">
		select count(*) from note_tb where emp_num = #{emp_num}
	</select>
	
	<!-- 사번별 row개수 count -->
	<select id ="receiveNoteCount3" parameterType="int" resultType="int">
		select count(*) from note_rcv_tb where emp_num = #{emp_num}
	</select>
	
	<!-- 사원정보 불러옴 -->
	<select id="swEmpListAll" resultType="Emp">
		select * from emp
	</select>
	
	<!-- 받은 쪽지함 구현 -->
	<select id="listSwNote_tb" parameterType="SwNote_tb" resultType="SwNote_tb">
	 <![CDATA[
				
		SELECT note2.note_sq note_sq, note2.read_dt read_dt, note2.snd_dt snd_dt, note2.recv_emp_name emp_name, note2.note_nm note_nm, 
        note2.note_cnt note_cnt, note2.read_count read_count, note2.note_fl_nm note_fl_nm, note2.note_fl_path note_fl_path
        FROM
        	( 
             SELECT ROWNUM rn , note.*
             FROM 
                    (
                       SELECT  nrt.note_sq, nrt.read_dt, nt.snd_dt, e1.emp_name send_emp_name, e2.emp_name recv_emp_name, 
                               nt.note_nm, nt.note_cnt, nrt.read_count, nt.note_fl_nm, nt.note_fl_path
                       FROM    note_rcv_tb nrt,
                               note_tb nt,
                               emp e1,
                               emp e2
                       WHERE   nt.emp_num  = #{emp_num}
                       AND     nt.note_sq  = nrt.note_sq 
                       AND     nt.emp_num  = e1.emp_num
                       AND     nrt.emp_num = e2.emp_num
                       ORDER BY note_sq desc
                    ) note
       		)  note2
       WHERE note2.rn >= #{start}
       AND   note2.rn <= #{end}
       
      ]]>
	</select>
	
	<!-- 받은 쪽지함 상세보기 -->
	<select id="receiveDetailNote" parameterType="int" resultType="SwNote_tb">
	    select nt.note_sq, nrt.read_dt, nt.snd_dt, e.emp_name emp_name, nt.note_nm, 
	    	   nt.note_cnt, nt.note_fl_nm, nt.note_fl_path
	    from note_rcv_tb nrt, 
	         note_tb nt,
	         emp e
	    where nt.note_sq = #{note_sq}
	    and   nt.note_sq = nrt.note_sq 
	    and   nt.emp_num = e.emp_num
	</select>
	
	<!-- 보낸 쪽지함 -->
	<select id="listSwNote_rcv_tb" parameterType="SwNote_rcv_tb" resultType="SwNote_rcv_tb">
	<![CDATA[
	
			SELECT note2.note_sq note_sq, note2.read_dt read_dt, note2.snd_dt snd_dt, note2.recv_emp_name recv_emp_name,
        	note2.note_nm note_nm, note2.note_cnt note_cnt, note2.read_count read_count, note2.note_fl_nm note_fl_nm, note2.note_fl_path note_fl_path
			FROM
            ( 
                 SELECT ROWNUM rn , note.* 
                 FROM 
                        (
                           select  nrt.note_sq, nrt.read_dt, nt.snd_dt, e1.emp_name send_emp_name,
						   e2.emp_name recv_emp_name, nt.note_nm, nt.note_cnt, nrt.read_count, nt.note_fl_nm, nt.note_fl_path
		    from    note_rcv_tb nrt,
	                       note_tb nt,
	                       emp e1,
	                       emp e2
			where   nt.emp_num  = #{emp_num}
		 	and     nt.note_sq  = nrt.note_sq 
			and     nt.emp_num  = e1.emp_num
		   	and     nrt.emp_num = e2.emp_num
		 	ORDER BY note_sq desc
                        ) note
            )  note2
   	 	   WHERE note2.rn >= #{start}
      	   AND   note2.rn <= #{end}
   	
     ]]>
	</select>
	
	<!-- 보낸 쪽지함 상세보기 구현 -->
	<select id="sentDetailNote" parameterType="int" resultType="SwNote_rcv_tb">
	    select nt.note_sq, nrt.read_dt, nt.snd_dt, e.emp_name emp_name, nt.note_nm, nt.note_cnt, read_count, nt.note_fl_nm,
	    	 nt.note_fl_path
	    from note_rcv_tb nrt, 
	         note_tb nt,
	         emp e
	    where nt.note_sq = #{note_sq}
	    and   nt.note_sq = nrt.note_sq 
	    and   nrt.emp_num = e.emp_num
	</select>
	
	<insert id="insertNote_tb" parameterType="SwNote_tb">
	 	insert into note_tb(NOTE_SQ, EMP_NUM, NOTE_NM, NOTE_CNT, SND_DT, NOTE_FL_NM, NOTE_FL_PATH) values (NOTE_SQ.NEXTVAL, #{emp_num}, 
	 	#{note_nm}, #{note_cnt}, sysdate, #{note_fl_nm}, #{note_fl_path})
	</insert>
	
	<insert id="insertSwNote_rcv_tb" parameterType="SwNote_rcv_tb">
		insert into note_rcv_tb(NOTE_SQ, EMP_NUM, READ_COUNT) values (NOTE_SQ.CURRVAL, #{emp_num2}, 0)
	</insert>
	
    <delete id="delete1" parameterType="string">
	    delete from note_rcv_tb where note_sq = #{checks[i]}
    </delete>

	<delete id="delete2"  parameterType="string">
	    delete from note_tb where note_sq = #{checks[i]}
    </delete>
    
    <update id="read_count_update" parameterType="int">
    	update note_rcv_tb set read_count = 1, read_dt = sysdate where note_sq = (select nt.note_sq
	    from note_rcv_tb nrt, 
	         note_tb nt,
	         emp e
	    where nt.note_sq = #{note_sq}
	    and   nt.note_sq = nrt.note_sq 
	    and   nt.emp_num = e.emp_num)
    </update>
</mapper>